NMEC : 98498

//1.Liste todos os documentos da coleção.
db.restaurants.find()

//2.Apresente os campos restaurant_id, nome, localidadee gastronomiapara todos os documentos da coleção.
db.restaurants.find({}, {restaurant_id:1, nome:1 ,localidade:1,gastronomia:1})

//3.Apresenteos campos restaurant_id, nome, localidadee código postal (zipcode), mas exclua o campo _idde todos os documentos da coleção.
db.restaurants.find({}, {restaurant_id:1, nome:1 ,localidade:1,"address.zipcode":1, _id:0})

//4.Indique o total de restaurantes localizados no Bronx.
db.restaurants.find({localidade: "Bronx"}).count()
Resultado: 309

//5.Apresente os primeiros 15restaurantes localizados no Bronx, ordenados por ordem crescente de nome.
db.restaurants.find({localidade: "Bronx"}).sort({nome:1}).limit(15)

//6.Liste todos os restaurantes que tenham pelo menos um score superior a 85.
db.restaurants.find({"grades": {$elemMatch: {"score": {$gte:85}}}})

//7.Encontre os restaurantes que obtiveram uma ou mais pontuações(score) entre [80 e 100].
db.restaurants.find({"grades": {$elemMatch: {"score": {$gte:80, $lte: 100}}}})

//8.Indiqueos restaurantes com latitude inferior a -95,7.
db.restaurants.find({"address.coord.0": {$lt: -95.7}})

//9.Indique os restaurantes que não têm gastronomia "American", tiveram uma (ou mais) pontuação superior a 70 e estão numa latitude inferior a -65.
db.restaurants.find({$and : [{ gastronomia: {$not: /American/}}, {"grades": {$elemMatch: {"score": {$gte:70}}}}, {"address.coord.0": {$lt: -65}}] })

//10.Liste o restaurant_id, o nome, a localidadee gastronomiados restaurantes cujo nome começam por "Wil".
db.restaurants.find({nome: /Wil*/}, {restaurant_id:1, nome:1, localidade:1 , gastronomia:1, _id: 0})

//11. Liste o nome, a localidade e a gastronomia dos restaurantes que pertencem ao Bronx e cuja gastronomia é do tipo "American" ou "Chinese".
db.restaurants.find({$and:[ {localidade: "Bronx"},{$or: [{gastronomia: "American"}, {gastronomia: "Chinese"}]}]}, {nome:1, localidade:1 , gastronomia:1, _id: 0})

//12.Liste o restaurant_id, o nome, a localidade e a gastronomia dos restaurantes localizados em"Staten Island", "Queens",ou"Brooklyn".
db.restaurants.find({$or:[ {localidade: "Staten Island"},{localidade: "Queens"}, {localidade: "Brooklyn"}]}, {restaurant_id:1, nome:1, localidade:1 , gastronomia:1, _id: 0})

//13.Liste o nome, a localidade, o score e gastronomia dos restaurantes que alcançaram sempre pontuações inferiores ou igual a 3.
db.restaurants.find({"grades.score":{$not: {$gt:3}}}, {restaurant_id:1, nome:1, localidade:1 , gastronomia:1, grades:{score:1} ,_id: 0})

//14.Listeo nomee as avaliações dos restaurantes que obtiveram uma avaliação com um grade"A",um score10na data "2014-08-11T00: 00: 00Z" (ISODATE).
db.restaurants.find({'grades': {'$elemMatch': {grade: 'A', score: 10, date: ISODate("2014-08-11T00:00:00Z")}}},{'grades.grade': 1, nome: 1})

//15.Listeo restaurant_id, o nomee os scoredos restaurantes nos quais a segunda avaliação foi grade"A"e ocorreu em ISODATE "2014-08-11T00: 00: 00Z".
db.restaurants.find({$and: [{"grades.1.grade":"A"},{"grades.1.date":new Date("2014-08-11T00:00:00Z")}]},{restaurant_id: 1, nome:1, "grades.score":1})

//16.Listeo restaurant_id, o nome, o endereço(address) e as coordenadas geográficas (coord)dosrestaurantes onde o 2º elemento da matriz de coordenadas temum valor superior a 42 e inferior ou igual a52.
db.restaurants.find({$and: [{'address.coord.1': {$gt:42}},{'address.coord.1': {$lte:52}}]}, {restaurant_id:1 , nome:1 ,address:1 })

//17.Liste nome, gastronomia e localidadede todos osrestaurantesordenando por ordem crescente da gastronomiae, em segundo,por ordem decrescentedelocalidade.
db.restaurants.find({}, {gastronomia:1 , nome:1 ,localidade:1}).sort({gastronomia:1, localidade:-1})

//18.Liste nome, localidade, gradee gastronomiade todos os restaurantes localizados emBrooklyn que não incluemgastronomia"American" e obtiveramuma classificação (grade) "A". Deve apresentá-los por ordem decrescente de gastronomia.
db.restaurants.find({localidade:"Brooklyn", gastronomia:{$ne:"American"}}, {"grades.grade":1 , nome:1 ,localidade:1, gastronomia:1}).sort({gastronomia:-1})

//19.Conte o total de restaurante existentes em cada localidade
db.restaurants.aggregate([{$group:{_id:"$localidade", num:{$sum:1}}}])

//20.Liste todos os restaurantes cuja média dosscore é superior a 30.
db.restaurants.aggregate([{$addFields: {avg: {$avg: "$grades.score"} }},{$match: {avg: {$gt: 30}}}])

//21.Indique os restaurantes que têm gastronomia "Portuguese", o somatório de score é superior a 50e estão numalatitude inferior a -60.
db.restaurants.aggregate([{ $project: {gastronomia:"$gastronomia", sum:{$sum:"$grades.score"} ,latitude:{$arrayElemAt:["$address.coord", 0]}}}, {$match:{sum:{$gt:75}, latitude:{$lt:-60}}}])

//22.Apresente o nome e o score dos 3 restaurantes com score médio mais elevado.
db.restaurants.aggregate([{$project: {"nome": 1, "grades.score": 1}}, {$addFields: {avg: {$avg: "$grades.score"}}},{$sort: {avg: -1}}, {$limit: 3}])

//23.Apresente o número de gastronomias diferentes na rua "Fifth Avenue"
db.restaurants.distinct("gastronomia", {"address.rua":"Fifth Avenue"}).length

//24.Conte quantos restaurantes existem por rua e ordenepor ordem decrescente
db.restaurants.aggregate([{$group:{_id:"$address.rua", numRest:{$sum:1}}}, {$sort: {"numRest": -1}}])

//25.Listar todos o numero total de restaurantes por localidade
db.restaurants.aggregate([{$group:{ _id: "$localidade", Total:{$sum: 1}}}, {$sort:{'Total':-1}}])

//26.Listar a gastronomia mais popular
db.rest.aggregate([{$group:{ _id:"$gastronomia", sum:{$sum:1}}},{$sort:{sum:-1}},{$limit:1}])

//27Localidade com mais restaurantes
db.restaurants.aggregate([{$group:{ _id: "$localidade", Total:{$sum: 1}}}, {$sort:{'Total':-1}}, {$limit: 1}])

//28.Restaurantes em Staten Island que têm gastronomia "American" e ordenados ascendentemente pelo nome do restaurante
db.restaurants.find({$and:[{gastronomia:"American"},{localidade:"Staten Island"},]},{nome:1,localidade:1,gastronomia:1}).sort({nome:1})

//29.Listar os restaurantes que tem gastronomia "American" mas que não se situam em Brooklyn nem em Staten Island
db.restaurants.find({gastronomia:"American", $nor: [{localidade:"Brooklyn"}, { localidade:"Staten Island" } ] })