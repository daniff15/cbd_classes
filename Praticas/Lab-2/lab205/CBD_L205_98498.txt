find({...}, {...})
// 1 - Cidades com certificate_number maior que 9310780
db.city_inspections.find({certificate_number : {$gt : 9310780}})

// 2 - Result = No Violation Issued
db.city_inspections.find({result: "No Violation Issued"})

// 3 - Cidades em que o setor contêm Retail no nome
db.city_inspections.find({sector:{ $regex : "Retail"}})

// 4 - Listar a nome da cidade e o sector das cidades que o número é menor que 20000
db.city_inspections.find({ "address.number" : {$lt : 20000}} , {city : 1, sector:1})

// 5 - Listar o nome de cada negócio de NEW YORK 
db.city_inspections.find({"address.city": "NEW YORK"}, {business_name : 1})

// 6 - Negócios que o result foi Pass e que são de STATEN ISLAND
db.city_inspections.find({$and : [{"address.city": "STATEN ISLAND"}, {result : "Pass"}]})


aggregate($group, $project, $unwind, $match, etc)
// 1 - Listar o numero de resultados de cada tipo
db.city_inspections.aggregate([{$group:{ _id: "$result", Total:{$sum: 1}}}])

// 2 - Resultado mais usual
db.city_inspections.aggregate([{$group:{ _id:"$result", sum:{$sum:1}}},{$sort:{sum:-1}},{$limit:1}])

// 3 - Listar o nome do negócio e a cidade
db.city_inspections.aggregate([{$project: {"business_name": 1, "address.city": 1}}])   

// 4 - Ordenar os negócios pelo seu nome de forma decrescente
db.city_inspections.aggregate([{$project: {"business_name": 1}}, {$sort : {"business_name" : -1}}])

// 5 - Conte quantos negócios há em cada cidade
db.city_inspections.aggregate([{$group:{_id:"$address.city", num:{$sum:1}}}])

// 6 - Conte quanto negócios tiveram como result = Pass em "JAMAICA"
